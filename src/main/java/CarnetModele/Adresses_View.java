/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CarnetModele;

import Connexions.AccesFichier;
import IConsole.ES;
import java.awt.Color;
import java.awt.Dimension;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author alain
 */
public class Adresses_View extends javax.swing.JFrame {

	/**
	 * Creates new form Adresses_View
	 */
	public Adresses_View() throws IOException {
		this.listePersonnes = new TabPersonnes();
		initComponents();
		
		initContacts();
	}
	
	private void initContacts() throws IOException{
//		String [][] listePersonnes = {
//			{"Abel", "O", "Photos/photo0.png"},
//			{"Birh", "S", "Photos/photo1.png"},
//			{"Caram", "G", "Photos/photo2.png"},
//			{"Delta", "C", "Photos/photo3.png"},
//			{"Abel", "O", "Photos/photo0.png"},
//			{"Birh", "S", "Photos/photo1.png"},
//			{"Caram", "G", "Photos/photo2.png"},
//			{"Delta", "C", "Photos/photo3.png"},
//			{"Abel", "O", "Photos/photo0.png"},
//			{"Birh", "S", "Photos/photo1.png"},
//			{"Caram", "G", "Photos/photo2.png"},
//			{"Delta", "C", "Photos/photo3.png"},
//		};
//		
//		Dimension taille;
//		listeContacts = new Contact[listePersonnes.length];
//		for (int i=0; i<listePersonnes.length; i++){
//			listeContacts[i] = new Contact(listePersonnes[i], i);
//			taille = listeContacts[i].getPreferredSize();
//			listeContacts[i].setBounds(0, i*(taille.height+2), taille.width, taille.height);
//			boiteContacts.add(listeContacts[i]);
//			taille.setSize(taille.width, (i+1)*(taille.height+2));
//			boiteContacts.setPreferredSize(taille);
//			boiteContacts.validate();
//		}
		
		Dimension taille;
		int id=0;
		String[] info = new String[8];
		AccesFichier ac = new AccesFichier("Donnees/listeContacts.txt");
		ArrayList<String> al = ac.lireArray();
		for (String st : al){
			id++;
			info = ac.extraireDonnees(st);
			Personne p = new Personne(id, info);
			listePersonnes.ajouter(p);
		}
		//ES.affiche(listePersonnes.toString());
		
		// peuplement de la boiteContacts
		for (int i=1; i<=listePersonnes.taille(); i++){
			Contact c = new Contact(listePersonnes.retourner(i));
			taille = c.getPreferredSize();
			c.setBounds(0, (i-1)*(taille.height+2), taille.width, taille.height);
			boiteContacts.add(c);
			taille.setSize(taille.width, (i+1)*(taille.height+2));
			boiteContacts.setPreferredSize(taille);
			boiteContacts.validate();
		}
		
		//Dimension taille2 = new Dimension(i2.getPreferredSize());		
			//ES.affiche(taille2.toString());
		//boiteInfos.add(i2);
		JPanel pan = new JPanel();
		pan.setBackground(Color.red);
		pan.add(new JButton());
		pan.setVisible(true);

		//boiteInfos.setPreferredSize(taille2);
//boiteInfos.add(new Infos(listePersonnes.getListeContacts().get(1)));
		boiteInfos.add(new JButton());
		boiteInfos.add(pan);
		boiteInfos.validate();

		
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        boiteGlobale = new javax.swing.JPanel();
        boiteAvecScroll = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        boiteContacts = new javax.swing.JPanel();
        boiteInfos = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(20, 20, 750, 500));
        setPreferredSize(new java.awt.Dimension(750, 500));

        mainPanel.setPreferredSize(new java.awt.Dimension(700, 500));

        boiteGlobale.setPreferredSize(new java.awt.Dimension(700, 500));
        boiteGlobale.setLayout(new java.awt.GridLayout(1, 2));

        boiteAvecScroll.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste de contacts"));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        javax.swing.GroupLayout boiteContactsLayout = new javax.swing.GroupLayout(boiteContacts);
        boiteContacts.setLayout(boiteContactsLayout);
        boiteContactsLayout.setHorizontalGroup(
            boiteContactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 336, Short.MAX_VALUE)
        );
        boiteContactsLayout.setVerticalGroup(
            boiteContactsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(boiteContacts);

        javax.swing.GroupLayout boiteAvecScrollLayout = new javax.swing.GroupLayout(boiteAvecScroll);
        boiteAvecScroll.setLayout(boiteAvecScrollLayout);
        boiteAvecScrollLayout.setHorizontalGroup(
            boiteAvecScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boiteAvecScrollLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        boiteAvecScrollLayout.setVerticalGroup(
            boiteAvecScrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );

        boiteGlobale.add(boiteAvecScroll);

        boiteInfos.setBorder(javax.swing.BorderFactory.createTitledBorder("Infos"));

        javax.swing.GroupLayout boiteInfosLayout = new javax.swing.GroupLayout(boiteInfos);
        boiteInfos.setLayout(boiteInfosLayout);
        boiteInfosLayout.setHorizontalGroup(
            boiteInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );
        boiteInfosLayout.setVerticalGroup(
            boiteInfosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        boiteGlobale.add(boiteInfos);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boiteGlobale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boiteGlobale, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        copyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
		System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void copyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copyMenuItemActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Adresses_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Adresses_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Adresses_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Adresses_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new Adresses_View().setVisible(true);
				} catch (IOException ex) {
					Logger.getLogger(Adresses_View.class.getName()).log(Level.SEVERE, null, ex);
				}
			}
		});
	}
	
	
	private TabPersonnes listePersonnes;
	private Contact [] listeContacts;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JPanel boiteAvecScroll;
    private javax.swing.JPanel boiteContacts;
    private javax.swing.JPanel boiteGlobale;
    private javax.swing.JPanel boiteInfos;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
